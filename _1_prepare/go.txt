版本查看
node -v
npm使用
安装模块
npm install [模块名] #不写模块命 按照package.json配置安装模块
npm install express      # 本地安装  将安装包放在 ./node_modules 下（运行 npm 命令时所在的目录） 可以通过 require() 来引入本地安装的包。
npm install express -g   # 全局安装  将安装包放在 /usr/local 下或者你 node 的安装目录 可以直接在命令行里使用。
如果出现以下错误：
npm err! Error: connect ECONNREFUSED 127.0.0.1:8087
解决办法为：
npm config set proxy null
卸载模块
npm uninstall express
更新模块
npm update express
删除所有模块
npm prune -x

Package.json 属性说明
name - 包名。
version - 包的版本号。
description - 包的描述。
homepage - 包的官网 url 。
author - 包的作者姓名。
contributors - 包的其他贡献者姓名。
dependencies - 依赖包列表。如果依赖包没有安装，npm 会自动将依赖包安装在 node_module 目录下。
repository - 包代码存放的地方的类型，可以是 git 或 svn，git 可在 Github 上。
main - main 字段是一个模块ID，它是一个指向你程序的主要项目。就是说，如果你包的名字叫 express，然后用户安装它，然后require("express")。
keywords - 关键字

创建模块
npm init
注册用户
npm adduser
用户登录--登录后才能上传
npm login
模块上传
npm publish
使用淘宝镜像 cnpm 的注意报错
no_perms Private mode enable, only admin can publish this module
设置回原本的就可以了：
npm config set registry http://registry.npmjs.org
1.使用淘宝镜像
npm install -g cnpm --registry=https://registry.npm.taobao.org
ps:
1.npm ERR! extraneous:项目的package.json中没有添加报extraneous错误的模块信息。
解决：